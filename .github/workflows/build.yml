name: "Void Linux"
on:
  schedule:
    - cron: "0 13 * * 1"
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        arch: ["aarch64-musl", "armv6l-musl", "armv7l-musl", "x86_64-musl", "aarch64-glibc", "armv6l-glibc", "armv7l-glibc", "x86_64-glibc", "i686-glibc"]
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: get date tag
      run: curl https://repo-default.voidlinux.org/live/current/ | tr '"' ' '  | grep href | awk '{print $3}' | tr '-' ' ' | awk '{print $NF}' | grep ".xz" | tr '.' ' ' | awk '{print $1}' | head -n 1 > date_id
    - name: Get date tag
      id: date_id
      run: echo "date_id=$(cat date_id)" >> $GITHUB_ENV
    - if: matrix.arch == 'aarch64-musl' 
      name: create docker image
      run: |
        docker import --platform "linux/arm64" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-${{ matrix.arch }}-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'armv7l-musl' 
      name: create docker image
      run: |
        docker import --platform "linux/arm/v7" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-${{ matrix.arch }}-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'x86_64-musl' 
      name: create docker image
      run: |
        docker import --platform "linux/amd64" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-${{ matrix.arch }}-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'armv6l-musl' 
      name: create docker image
      run: |
        docker import --platform "linux/arm/v6" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-${{ matrix.arch }}-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'aarch64-glibc'
      name: create docker image
      run: |
        docker import --platform "linux/arm64" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-aarch64-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'x86_64-glibc'
      name: create docker image
      run: |
        docker import --platform "linux/amd64" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-x86_64-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'armv7l-glibc'
      name: create docker image
      run: |
        docker import --platform "linux/arm/v7" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-armv7l-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'i686-glibc'
      name: create docker image
      run: |
        docker import --platform "linux/i386" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-i686-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - if: matrix.arch == 'armv6l-glibc'
      name: create docker image
      run: |
        docker import --platform "linux/arm/v6" --change 'CMD /bin/bash' https://repo-default.voidlinux.org/live/current/void-armv6l-ROOTFS-${{ env.date_id }}.tar.xz ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - name: xbps-packages
      run: |
        docker build --build-arg USERNAME=${{ secrets.DOCKER_USERNAME }} --build-arg TAG=${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest -t void-packages -t ${{ secrets.DOCKER_USERNAME }}/void-packages:${{ matrix.arch }}-${{ env.date_id }} ${{ secrets.DOCKER_USERNAME }}/void:${{ matrix.arch }}-latest
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: push to docker (dated)
      run: docker push ${{ secrets.DOCKER_USERNAME }}/void-packages:${{ matrix.arch }}-${{ env.date_id }}
    - name: push to docker (latest)
      run: docker push ${{ secrets.DOCKER_USERNAME }}/void-packages:${{ matrix.arch }}-latest
    
